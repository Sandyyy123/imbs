% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ex2pdf.R
\name{ex2pdf}
\alias{ex2pdf}
\title{Generation of Exercise Sheets and Exams in PDF Format}
\usage{
ex2pdf(sheets, poolDir, templates, outDir = getwd(), names, n = 1,
  compiler = list(command = "latexmk", args = c("-pdf",
  "-interaction=batchmode")), clean = TRUE, ...)
}
\arguments{
\item{sheets}{[\code{list}]\cr
A list with the following mandatory entries:
\itemize{
  \item{\code{exercises}}{ [\code{list}] with file names 
    to look for in \code{poolDir}. This is done 
    recursively. Don't give the absolute path or relative 
    path, just the file name. You can omit the extension. 
    If a list entry is a \code{character} vector of file 
    names, they get sampled according to \code{nsamp}.}
  \item{\code{nsamp}}{ [\code{integer}] giving the number
    of exercises to sample, if the corresponding entry of
    \code{exercises} is a \code{character}. As most as 
    long as \code{exercises}. Gets recycled if shorter.}
}
Additional entries are available during brewing of the
\code{templates} files. If the list entries are named, the
names are appended to \code{names} to generate unique file
names.}

\item{poolDir}{[\code{string}]\cr
Path of the directory storing the exercise files.}

\item{templates}{[\code{character}]\cr
Path of template files. Each file must follow the 
\code{\link[brew]{brew}} specifications. Each template 
will be brewed, knited and compiled into one single PDF.}

\item{outDir}{[\code{string}]\cr
Path of the output directory. Default is the current 
working directory.}

\item{names}{[\code{character}]\cr
Specifies the naming scheme of each template in the output
directory.}

\item{n}{[\code{integer}]\cr
Specifies the number of copies to be generated per 
template. If \code{n}>1, the numer of copy is appended to 
the output file name.}

\item{compiler}{[\code{list}]\cr
Specifies the LaTeX compiler and its arguments. Must have
the following entries:
\itemize{
  \item{\code{command}}{ [\code{string}] name of the 
  executable of the LaTeX compiler to be called.}
  \item{\code{args}}{ [\code{character}] vector of 
  arguments passed to the LaTeX compiler.}
}}

\item{clean}{[\code{character} or \code{flag}]\cr
If \code{TRUE} all files but PDF files in \code{outDir} 
are removed after compilation. If a \code{character} 
vector, only files with the given extensions are removed
after compilation. If \code{FALSE} no clean up is done.}

\item{...}{Any further arguments passed to the environment of 
\code{\link[brew]{brew}}. This is helpful to pass static
elements such as e-mail adresses or semester identifier to
all \code{\link[brew]{brew}} calls.}
}
\value{
Invisible \code{character} with path of generated PDF files.
}
\description{
Automatic generation of exercise sheets and exams in PDF format,
inspired by the \code{exams} package.
}
\details{
Examples of templates are installed in 
\code{systemfile("templates", package = "imbs)}. Examples of exercises and 
solutions are installed in \code{systemfile("templates", package = "imbs)}.
}
\examples{
\dontrun{
if(require(ggplot2)) {
sheets <- list(w1 = list(exercises = list("sum1", "sum2"), 
                         nsamp = c(1, 1),
                         date = "yyyy-mm-dd"),
               w2 = list(exercises = list(c("boxplot1", "regression1")),  
                         nsamp = 1,
                         date = "yyyy-mm-dd"))

ex2pdf(sheets = sheets,
       poolDir = system.file("pool", package = "imbs"),
       templates = c(system.file("templates/exercise.brew", package = "imbs"),
                     system.file("templates/solution.brew", package = "imbs")),
       outDir = file.path(getwd(), "ex2pdfTest"),
       names = c("Exercise", "Solution"),
       n = 2,
       compiler = list(command = "pdflatex",
                       args = c("-interaction=batchmode")),
       year = 2016,
       email = "mail@example.net")
 }
}
}
\author{
Damian Gola, \email{gola@imbs.uni-luebeck.de}
}

